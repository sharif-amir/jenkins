pipeline {
    agent any
    environment {
        DIRECTORY_PATH= "The path of the code directory being fetched"
        TESTING_ENVIRONMENT= "pipeline"
        PRODUCTION_ENVIRONMENT= "Sharif"
        EMAIL_RECIPIENT= "example@example.com"
    }
    post {
        always {
            emailext body: "${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
            subject: "${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
            attachmentsPattern: '**/*.log', 
            to: "${EMAIL_RECIPIENT}"
        }
    }
    stages{
        stage("Build"){
            steps{
                echo "Build started and completed!"
                echo "Fetch the source code from the directory path specified by the environment variable"
            }
        }
        stage("Test"){
            steps{
                echo "Test started!"
                sh "run_unit_tests.sh > test.log"
                sh "run_integration_tests.sh >> test.log"
                echo "Test completed!"
            }
            post {
                success {
                    emailext body: "Test passed!", 
                    subject: "Test passed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
                    attachmentsPattern: '**/*.log', 
                    to: "${EMAIL_RECIPIENT}"
                }
                failure {
                    emailext body: "Test failed!", 
                    subject: "Test failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
                    attachmentsPattern: '**/*.log', 
                    to: "${EMAIL_RECIPIENT}"
                }
            }
        }
        stage("Code Quality Check"){
            steps{
                echo "Code Quality Check started and completed!"
                echo "Check the quality of the code"
            }
        }
        stage("Deploy"){
            steps{
                echo "Deploy started and completed!"
                echo "Deploy the application to a testing environment specified by the environment variable"
            }
        }
        stage("Security scan"){
            steps{
                echo "Security scan started!"
                sh "run_security_scan.sh > security_scan.log"
                echo "Security scan completed!"
            }
            post {
                success {
                    emailext body: "Security scan passed!", 
                    subject: "Security scan passed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
                    attachmentsPattern: '**/*.log', 
                    to: "${EMAIL_RECIPIENT}"
                }
                failure {
                    emailext body: "Security scan failed!", 
                    subject: "Security scan failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
                    attachmentsPattern: '**/*.log', 
                    to: "${EMAIL_RECIPIENT}"
                }
            }
        }
        stage("Deploy to Production"){
            steps{
                echo "${TESTING_ENVIRONMENT}, Deploy to Production started and completed!"
                
            }
        }

    }
}